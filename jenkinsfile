pipeline {
    agent { label 'Agent2' }
    environment {
        GIT_REPO = 'https://github.com/vasavit07/devops-project1.git'
        BRANCH = 'main'
        DOCKER_IMAGE = 'dockeradmin84/devops-project1'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Clone') {
            steps {
                git url: "${GIT_REPO}", branch: "${BRANCH}", credentialsId: '2c888d9c-0db8-4373-89e5-a0fda218abb3'
            }
        }

        stage('Build') {
            steps {
                dir('/opt/jenagenthome/workspace/') {
                    echo "Build step done"
                }
            }
        }

        stage('Compile') {
            steps {
                dir('/opt/jenagenthome/workspace/Package_docker_V3/') {
                    sh 'mvn compile'
                }
            }
        }

        stage('Test') {
            steps {
                dir('/opt/jenagenthome/workspace/Package_docker_V3/') {
                    sh 'mvn test'
                }
            }
        }

        stage('Package') {
            steps {
                dir('/opt/jenagenthome/workspace/Package_docker_V3') {
                    sh 'mvn package'
                }
            }
        }
        
        stage('Docker Build & Push') {
            steps {
                script {
                    withCredentials([
                        usernamePassword(
                            credentialsId: 'DOCKERHUB_CREDS',
                            usernameVariable: 'DOCKER_USERNAME',
                            passwordVariable: 'DOCKER_PASSWORD'
                        )
                    ]) {
                        // Docker login
                        sh "echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin"
                        echo "Logged into Docker Hub successfully!"

                        // Docker build
                        sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} /opt/jenagenthome/workspace/Package_docker_V3"

                        // Docker push
                        sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    }
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts artifacts: '**/target/**', fingerprint: true
        }
    }
}
